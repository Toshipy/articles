name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    name: Build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
    
      # Go環境のセットアップ
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      # Python環境のセットアップ
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

        # 必要なPythonパッケージのインストール
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install deepl python-frontmatter python-dotenv

      # dev-to-gitのインストール
      - name: Install dev-to-git dependency
        run: go get github.com/itchyny/gojq

      # 仮の記事を作成
      - name: Create draft post
        env:
          DEV_TO_GIT_TOKEN: ${{ secrets.DEV_TO_GIT_TOKEN }}
        run: |
          go run create-post-devto.go

      # 記事IDを取得
      - name: Get post ID
        env:
          DEV_TO_GIT_TOKEN: ${{ secrets.DEV_TO_GIT_TOKEN }}
        id: get-id
        run: |
          ID=$(go run get-blog-id.go)
          echo "POST_ID=$ID" >> $GITHUB_OUTPUT

      # 翻訳を実行
      - name: Translate content
        env:
          DEEPL_API_KEY: ${{ secrets.DEEPL_API_KEY }}
        run: |
          mkdir -p devto
          python translate.py

      # 翻訳した内容を移動
      - name: Move translated content
        run: |
          for file in translate/*.md; do
            if [ -f "$file" ]; then
              filename=$(basename "$file")
              id = "{$filename%.md}"
              mv "$file" "devto/${id}.md"
            fi
          done

      - name: Install reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - name: Install Dependencies
        uses: bahmutov/npm-install@v1

        #Make sure that cache is retrieved even if steps fail
      - name: cache-node-modules
        uses: pat-s/always-upload-cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-

      - name: Install textlint
        run: 'npm install --save-dev textlint textlint-rule-common-misspellings textlint-rule-spellchecker'
      
      - name: Run textlint
        run: npx textlint -f checkstyle "devto/**/*.md" >> .textlint.log

      - name: Run reviewdog
        if: failure()
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cat .textlint.log | reviewdog -f=checkstyle -name="textlint" -reporter="github-pr-review"

      - name: Run Prettier
        run: npm run prettier:check

      - name: Run Embedme
        run: npm run embedme:check

  deploy:
    name: Deploy
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master

      - name: Install Dependencies
        uses: bahmutov/npm-install@v1

      - name: Deploy to dev.to
        run: DEV_TO_GIT_TOKEN=${{ secrets.DEV_TO_GIT_TOKEN }} npm run dev-to-git
